{"version":3,"sources":["commonThings/history.js","reducers/authReducer.js","reducers/allTracksReducer.js","reducers/IndexOfCurrentTrackReducer.js","reducers/AllPLaylistsReducer.js","reducers/TracklistFindReducer.js","reducers/promiceReducer.js","reducers/combineReducer.js","actioncreators/actionCreatorLogin.js","store/store.js","actioncreators/actionCreatorsLogout.js","commonThings/getGQL.js","actioncreators/actionCreatorPromisePending.js","actioncreators/actionCreatorPromiseResolved.js","actioncreators/actionCreatorPromiseRejected.js","actioncreators/actionCreatorPromise.js","actioncreators/actionCreatorFullLogin.js","actioncreators/actionCreatorRegistration.js","components/registrationForm.js","actioncreators/actionCreatorIndexOfCurrentTrack.js","commonThings/gql.js","actioncreators/actionCreatorCurrentTrack.js","components/Footer/Player.js","components/Main/Header.js","actioncreators/actionCreatorCurrentPlaylist.js","components/Aside/playlistOne.js","actioncreators/actionCreatorAllPlaylists.js","actioncreators/actionCreatorAddNewPlaylist.js","components/Aside/playlistsAll.js","commonThings/preloader.js","components/Aside/Aside.js","actioncreators/actionCreatorAddTrackToCurrentPlaylist.js","components/DropZone.js","components/Main/descriptionCurrentSong.js","actioncreators/actionCreatorDeleteTrack.js","components/Main/OneTrack.js","components/Main/CurrentTrackList.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["history","createHistory","initialState","authReducer","state","action","type","localStorage","authToken","token","data","jwt_decode","removeItem","push","allTracksReducer","originalFileName","artist","genre","year","arrayAllSongs","indexOfCurrentTrackReducer","index","AllPlaylists","tracklistFindReducer","text","promiseReducer","name","status","payload","error","combineReducers","currentSongReducer","actionCreatorLogin","tokenGot","store","createStore","reducer","applyMiddleware","thunk","subscribe","console","log","getState","dispatch","actionCreatorLogout","getGQL","url","headers","query","variables","fetch","method","body","JSON","stringify","then","res","json","actionCreatorPromisePending","actionCreatorPromiseResolved","actionCreatorPromiseRejected","actionCreatorPromise","promise","a","result","gql","actionCreatorFullLogin","login","password","tokenData","actionCreatorRegistration","createUser","connect","loggedOrNotDescription","nameHasAlreadyTaken","registration","props","useState","registrationOrLogin","setRegistrationOrLogin","inputLogin","setInputLogin","inputPassword","setInputPassword","inputPasswordTwo","setInputPasswordTwo","pass","className","onClick","id","placeholder","onChange","e","target","value","sendLoginPassword","disabled","length","actionCreatorIndexOfCurrentTrack","Authorization","actionCreatorCurrentTrack","trackId","currentTrackUrl","сurrentTrack","TrackFindOne","currentTrackName","currentPlaylistArr","сurrentPlayList","PlaylistFindOne","tracks","nextTrack","_id","mathPain","prevTrack","style","outline","undefined","src","preload","controls","autoPlay","onEnded","nameLoggedUser","sub","MyButton","actionCreatorCurrentPlayList","playlistId","lastPLaylist","currentPlaylistId","color","actionCreatorAllPlaylists","actionCreatorAddNewPlaylist","PlaylistsAll","addButton","setAddButton","inputValue","setInputValue","allPlaylists","map","item","key","desсription","description","Preloader","CircularProgress","PlaylistFind","useEffect","actionCreatorAddTrackToCurrentPlaylist","idPlaylist","arrTracks","idTrack","arr","onDrop","useCallback","acceptedFiles","file","formData","FormData","append","track","actionUpload","useDropzone","getRootProps","getInputProps","isDragActive","album","id3","title","actionCreatorDeleteTrack","playlistArr","currentIndex","splice","currentPlayListLength","currentPlayListId","currentPlayListTracksArr","ref","current","scrollIntoView","useRef","playlistName","Main","Main2","App","path","component","RegistrationForm","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","catch","message"],"mappings":"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","file":"static/js/main.9a998992.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\n\r\nlet history = createHistory()\r\nexport default history","import jwt_decode from \"jwt-decode\";\r\nimport history from \"../commonThings/history\";\r\n\r\nconst initialState = {}\r\n\r\nconst authReducer = (state=initialState,action)=>{\r\n   /* if(state===undefined){\r\n        return {\r\n            data:\"\",\r\n            token:\"\"\r\n      }  }*/\r\n    /*debugger;*/\r\n    if(action.type === \"LOGIN\"){\r\n        localStorage.authToken = action.token\r\n        return {data: action.token != \"null\" ? jwt_decode(action.token) : \"\",  token:action.token }  // action\r\n\r\n\r\n    }\r\n    if(action.type === \"LOGOUT\"){\r\n        localStorage.removeItem('authToken')\r\n        history.push('/registration')\r\n        return {}\r\n    }\r\n    return state\r\n}\r\nexport default authReducer\r\n\r\n\r\n/*\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case ACTION_1: return { value: action.value_1 };\r\n        case ACTION_2: return { value: action.value_2 };\r\n\r\n        default: return state;\r\n    }\r\n}*/","const initialState = {}\r\n\r\nconst allTracksReducer = (state=initialState, action)=>{\r\n\r\n    if(action.type === \"ADD_TRACK\"){\r\n        return {originalFileName: \"\",artist: '',genre: '',year: ''}  // action\r\n    }\r\n    /*if(action.type===\"ALL_TRACKS\"){\r\n        return [...state,\r\n            {\r\n                originalFileName:action.url,\r\n                artist:\"\" ,\r\n                genre: \"\",\r\n                year: \"\",\r\n            }\r\n\r\n        ]\r\n    }*/\r\n    if(action.type===\"ALL_TRACKS\"){\r\n        debugger;\r\n        return action.arrayAllSongs\r\n        /*[\r\n\r\n            {\r\n                originalFileName:action.arrayAllSongs.originalFileName,\r\n                url:action.arrayAllSongs.url,\r\n                artist: action.arrayAllSongs.id3 != null && action.arrayAllSongs.id3.genre!=null? action.arrayAllSongs.id3.artist:\"--\" ,\r\n                genre: action.arrayAllSongs.id3 != null && action.arrayAllSongs.id3.artist!=null? action.arrayAllSongs.id3.genre:\"--\" ,\r\n                year: action.arrayAllSongs.id3 != null && action.arrayAllSongs.id3.year!=null? action.arrayAllSongs.id3.year:\"--\" ,\r\n            }\r\n\r\n        ]*/\r\n\r\n       /* {\r\n            originalFileName: action.arrayAllSongs[].originalFileName,\r\n            url:\r\n        }*/\r\n    }\r\n\r\n    return state\r\n}\r\nexport default allTracksReducer\r\n","const initialState = {}\r\n\r\nconst indexOfCurrentTrackReducer = (state=initialState, action)=>{\r\n\r\n\r\n    if(action.type === \"CURRENT_TRACK\"){\r\n        return {index:action.index}\r\n    }\r\n    return state\r\n}\r\nexport default indexOfCurrentTrackReducer\r\n","const initialState = {}\r\n\r\nconst AllPlaylists = (state=initialState, action)=>{\r\n\r\n    if(action.type === \"ALL_PLAYLISTS\"){\r\n        return {data:action}\r\n    }\r\n    return state\r\n}\r\nexport default AllPlaylists\r\n","import actionCreatorTracklistFind from \"../actioncreators/actionCreatorTracklistFind\";\r\n\r\nconst initialState = \"\"\r\n\r\nconst tracklistFindReducer = (state=initialState,action)=>{\r\n\r\n\r\n    if(action.type === \"PLAYLIST_FIND\"){\r\n        return action.text\r\n    }\r\n    return state\r\n}\r\nexport default tracklistFindReducer","\r\nconst promiseReducer = (state={}, {type, name, status, payload, error})=>{\r\n   if (type === \"PROMISE\") {\r\n        return {\r\n            ...state, [name]:{\r\n                status,\r\n                payload,\r\n                error,\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\nexport default promiseReducer\r\n\r\n","import {combineReducers} from \"redux\";\r\n/*import trscks(this is a reducer) from some adress*/\r\nimport authReducer from \"./authReducer\";\r\nimport allTracksReducer from \"./allTracksReducer\";\r\nimport indexOfCurrentTrackReducer from \"./IndexOfCurrentTrackReducer\";\r\nimport AllPlaylists from \"./AllPLaylistsReducer\";\r\nimport tracklistFindReducer from \"./TracklistFindReducer\";\r\nimport promiseReducer from \"./promiceReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    authReducer,\r\n    currentSongReducer: indexOfCurrentTrackReducer,\r\n    allTracksReducer,\r\n    AllPlaylists,\r\n    tracklistFindReducer,\r\n   promiseReducer\r\n\r\n})\r\n\r\n\r\n\r\n\r\n","const actionCreatorLogin = (tokenGot)=>({\r\n    type:\"LOGIN\",\r\n    token:tokenGot\r\n})\r\n\r\nexport default actionCreatorLogin","import thunk from 'redux-thunk';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport reducer from \"../reducers/combineReducer\"\r\nimport actionCreatorLogin from \"../actioncreators/actionCreatorLogin\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk) );\r\nstore.subscribe(()=>console.log(\" subscribe  \",  store.getState()))\r\nif (localStorage.authToken){store.dispatch(actionCreatorLogin(localStorage.authToken))}\r\n\r\nexport default store\r\n\r\n","const actionCreatorLogout = ()=>({\r\n    type:\"LOGOUT\"\r\n})\r\nexport default actionCreatorLogout","\r\nconst          getGQL = (url, headers={}) =>\r\n    (query=\"\", variables={}) =>\r\n        fetch(url,\r\n            {method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    ...headers\r\n                },\r\n                body: JSON.stringify({query,variables})\r\n            })\r\n            .then(res => res.json())\r\n\r\nexport default getGQL","const actionCreatorPromisePending = (name)=>{\r\n    return {\r\n        type:\"PROMISE\",\r\n        status:\"PENDING\",\r\n        payload:null,\r\n        error:null,\r\n        name\r\n    }}\r\nexport default actionCreatorPromisePending\r\n\r\n\r\n","const actionCreatorPromiseResolved = (name,payload)=>{\r\n    return {\r\n        type:\"PROMISE\",\r\n        status:\"RESOLVED\",\r\n        payload,\r\n        error:null,\r\n        name\r\n\r\n    }}\r\nexport default actionCreatorPromiseResolved\r\n","\r\nconst actionCreatorPromiseRejected = (name,error)=>{\r\n\r\n    return {\r\n        type:\"PROMISE\",\r\n        status:\"REJECTED\",\r\n        payload:null,\r\n        error,\r\n        name\r\n\r\n    }}\r\nexport default actionCreatorPromiseRejected\r\n","import actionCreatorPromisePending from \"./actionCreatorPromisePending\";\r\nimport actionCreatorPromiseResolved from \"./actionCreatorPromiseResolved\";\r\nimport actionCreatorPromiseRejected from \"./actionCreatorPromiseRejected\";\r\n\r\n function actionCreatorPromise(name, promise){\r\n    return async dispatch => {\r\n        dispatch(actionCreatorPromisePending(name))\r\n        try {\r\n            let result = await promise\r\n            dispatch(actionCreatorPromiseResolved(name, result))\r\n            return result;\r\n        }\r\n        catch(e){\r\n            dispatch(actionCreatorPromiseRejected(name, e))\r\n        }\r\n    }\r\n}\r\nexport default actionCreatorPromise","import actionCreatorLogin from \"./actionCreatorLogin\";\r\nimport actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport getGQL from \"../commonThings/getGQL\";\r\nimport history from \"../commonThings/history\";\r\n\r\nconst gql = getGQL('/graphql')\r\n\r\nfunction actionCreatorFullLogin(login, password){\r\n\r\n    return async dispatch => {\r\n        let tokenData = await dispatch(actionCreatorPromise('login', gql(`query log{\r\n          login(login:\"${login}\", password:\"${password}\")\r\n          }`)))\r\n        tokenData && tokenData.data.login!=null &&  dispatch(actionCreatorLogin(tokenData.data.login)) && history.push('/')//authLOgin action\r\n    }\r\n\r\n}\r\nexport default actionCreatorFullLogin\r\n","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport actionCreatorFullLogin from \"./actionCreatorFullLogin\";\r\nimport getGQL from \"../commonThings/getGQL\";\r\n\r\nconst gql = getGQL('/graphql')\r\n\r\nfunction actionCreatorRegistration(login, password){\r\n    return async dispatch => {\r\n        let registrationAnswer = await dispatch(actionCreatorPromise('registration', gql(`mutation newUser{\r\n            createUser(login:\"${login}\", password:\"${password}\"){\r\n             _id login\r\n           }\r\n        }\r\n         `)))\r\n\r\n        if(registrationAnswer.data.createUser!=null){\r\n        await dispatch(actionCreatorFullLogin(login, password))}\r\n    }\r\n}\r\nexport default actionCreatorRegistration","import React from \"react\"\r\nimport {useState} from \"react\";\r\nimport {Provider, connect}   from 'react-redux';\r\nimport {createStore, combineReducers} from 'redux';\r\nimport store from \"../store/store\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport actionCreatorLogin from \"../actioncreators/actionCreatorLogin\";\r\nimport actionCreatorLogout from \"../actioncreators/actionCreatorsLogout\";\r\nimport getGQL from \"../commonThings/getGQL\";\r\nimport actionCreatorPromisePending from \"../actioncreators/actionCreatorPromisePending\";\r\nimport actionCreatorPromiseResolved from \"../actioncreators/actionCreatorPromiseResolved\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport actionCreatorPromiseRejected from \"../actioncreators/actionCreatorPromiseRejected\";\r\nimport actionCreatorPromise from \"../actioncreators/actionCreatorPromise\";\r\nimport actionCreatorRegistration from \"../actioncreators/actionCreatorRegistration\";\r\nimport actionCreatorFullLogin from \"../actioncreators/actionCreatorFullLogin\";\r\n\r\n\r\n\r\n\r\n// let history = createHistory()\r\n\r\nconst RegistrationForm = (props)=> {\r\n    const [registrationOrLogin, setRegistrationOrLogin] = useState(true)\r\n    const [inputLogin, setInputLogin] = useState(\"Windforce\")\r\n    const [inputPassword, setInputPassword] = useState(\"2222\")\r\n    const [inputPasswordTwo, setInputPasswordTwo] = useState(\"\")\r\n\r\n    async function sendLoginPassword(log, pass) {\r\n        !registrationOrLogin ?\r\n            store.dispatch(actionCreatorFullLogin(log, pass)) :\r\n            store.dispatch(actionCreatorRegistration(log, pass))\r\n    }\r\n    /*let loggedOrNotDescription = registrationOrLogin?\r\n        \"Please create your login and password\":\r\n        \"Please log in\"*/\r\n            return (\r\n            <div className={\"registration-form__wrapper\"}>\r\n                <div className={\"registration-form\"}>\r\n                    <button\r\n                        onClick={() => setRegistrationOrLogin(!registrationOrLogin)}\r\n                    >{registrationOrLogin ? \"Have an account? Log in\" : \"Go to registration\"}</button>\r\n                    {registrationOrLogin ? \"Sign up to enjoy the best music player\" : \"Log in to enjoy the best music player\"}\r\n                    <input\r\n                        id='login'\r\n                        type='text'\r\n                        placeholder=\"Enter your login\"\r\n                        onChange={(e) => setInputLogin(e.target.value)}\r\n                        value={inputLogin}\r\n                    />\r\n                    <input\r\n                        id='password'\r\n                        type='password'\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(e) => setInputPassword(e.target.value)}\r\n                        value={inputPassword}\r\n                    />\r\n                    {registrationOrLogin ? <input\r\n                        id='passwordTwo'\r\n                        type='password'\r\n                        placeholder=\"Repeat your password\"\r\n                        onChange={(e) => setInputPasswordTwo(e.target.value)}\r\n\r\n                    /> : \"\"\r\n                    }\r\n                    <div>{registrationOrLogin?\r\n                        props.nameHasAlreadyTaken :\r\n                        props.loggedOrNotDescription\r\n                    }</div>\r\n\r\n                    <button\r\n                        onClick={() => sendLoginPassword(inputLogin, inputPassword)}\r\n                        disabled={registrationOrLogin ? inputPassword !== inputPasswordTwo || inputLogin.length < 2 || inputPassword.length < 2 :\r\n                            inputLogin.length < 2 || inputPassword.length < 2}\r\n                    >ok\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\nexport default connect(\r\n    state=>({\r\n       /* loggedStatus: typeof state.authReducer.data==\"object\",*/\r\n        loggedOrNotDescription:\r\n            state.promiseReducer.login && state.promiseReducer.login.payload && state.promiseReducer.login.payload.data.login == null?\r\n            \"Wrong login or password\":\r\n            \"Please log in\",\r\n        nameHasAlreadyTaken:\r\n            state.promiseReducer.registration &&\r\n            state.promiseReducer.registration.payload &&\r\n            state.promiseReducer.registration.payload.data.createUser==null?\r\n                \"This name has already taken\":\r\n                \"Please create your login and password\"\r\n    }),\r\n    null\r\n)\r\n(RegistrationForm)\r\n\r\n    /*const getGQL = (url, headers = {}) =>\r\n        (query = \"\", variables = {}) =>\r\n            fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        ...headers\r\n                    },\r\n                    body: JSON.stringify({query, variables})\r\n                })\r\n                .then(res => res.json())\r\n                .then(data => data.data)*/\r\n\r\n    /*const actionCreatorLogin = (tokenGot)=>({\r\n        type:\"LOGIN\",\r\n        token:tokenGot\r\n    })*/\r\n\r\n//const gql = getGQL('http://player.fs.a-level.com.ua/graphql', {Authorization: \"Bearer \" + localStorage.authToken})\r\n\r\n\r\n// let login = \"Wind889\"\r\n// let password =\"2222\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const actionCreatorIndexOfCurrentTrack = (index)=>{\r\n    // debugger;\r\n   return {\r\n    type:\"CURRENT_TRACK\",\r\n    index,\r\n}}\r\nexport default actionCreatorIndexOfCurrentTrack","import getGQL from \"./getGQL\";\r\n\r\n\r\nconst gql = getGQL('/graphql', {Authorization: \"Bearer \" + localStorage.authToken})\r\n\r\nexport default gql","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport gql from \"../commonThings/gql\";\r\nimport store from \"../store/store\";\r\nimport actionCreatorIndexOfCurrentTrack from \"./actionCreatorIndexOfCurrentTrack\";\r\n\r\nfunction actionCreatorCurrentTrack(trackId,index){\r\n\r\n    store.dispatch(actionCreatorIndexOfCurrentTrack(index))\r\n    return actionCreatorPromise(\"сurrentTrack\",gql(`\r\n            query currentTrack{\r\n            TrackFindOne(query:\"[{\\\\\"_id\\\\\":\\\\\"${trackId}\\\\\"}]\"){url originalFileName id3{artist album title genre year}}\r\n            }    \r\n    `))\r\n\r\n}\r\nexport default actionCreatorCurrentTrack\r\n\r\n// query allPlaylists{\r\n// PlaylistFindOne(query:\"[{\\\\\"_id\\\\\":\\\\\"${trackId}\\\\\"}]\"){name tracks{_id originalFileName id3{title album artist year genre trackNumber}}}\r\n// }","import React from \"react\"\r\nimport {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorLogout from \"../../actioncreators/actionCreatorsLogout\";\r\nimport store from \"../../store/store\";\r\nimport actionCreatorIndexOfCurrentTrack from \"../../actioncreators/actionCreatorIndexOfCurrentTrack\";\r\nimport actionCreatorCurrentTrack from \"../../actioncreators/actionCreatorCurrentTrack\";\r\n\r\n/*\r\nimport {TextField} from \"@material-ui/core\"\r\n<TextField id=\"standard-basic\" label=\"Standard\" />\r\n*/\r\n\r\nconst Player = (props)=>{\r\n\r\n/*    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\"http://player.asmer.fs.a-level.com.ua/track/0c751aeed5f529c6393a035a5fb7d9e7\", {\r\n        onSuccess: function(tag) {\r\n            console.log(tag);\r\n        },\r\n        onError: function(error) {\r\n            console.log(error);\r\n        }\r\n    });*/\r\n\r\n    function prevTrack() {\r\n        let mathPain =(props.currentPlaylistArr.length + (props.index - 1)%props.currentPlaylistArr.length)%props.currentPlaylistArr.length\r\n       store.dispatch(actionCreatorCurrentTrack(props.currentPlaylistArr[mathPain]._id, mathPain))\r\n    }\r\n    function nextTrack() {\r\n        store.dispatch(actionCreatorCurrentTrack(props.currentPlaylistArr[(props.index+1) % props.currentPlaylistArr.length]._id, props.index+1))\r\n    }\r\n    return(\r\n        <div className={\"footer\"}>\r\n\r\n\r\n           {/* <div className={\"footer-name\"}>\r\n                { props.currentTrackName || \"Track Name\"}\r\n            </div>*/}\r\n            <div className={\"footer-player\"}>\r\n                <button onClick={\r\n                    () => prevTrack()\r\n\r\n                }\r\n                    style={{outline:\"none\"}}\r\n                    disabled={props.index===undefined}\r\n                >\r\n                    prev\r\n                </button>\r\n                <audio id=\"audio\" src={\"/\"+props.currentTrackUrl}\r\n                       preload=\"auto\"\r\n                       controls=\"controls\"\r\n                       autoPlay={true}\r\n                       onEnded={()=>nextTrack()}\r\n                       style={{outline:\"none\"}}\r\n                >\r\n                    //ended   suspend- ошибки инета volumechange\r\n                </audio>\r\n                <button onClick={\r\n                    () => nextTrack()\r\n                }\r\n                    disabled={props.index===undefined}\r\n                        style={{outline:\"none\"}}\r\n                >\r\n                    next\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    (state)=>({\r\n        currentTrackUrl:\r\n            state.promiseReducer &&\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.url,\r\n        currentTrackName:\r\n            state.promiseReducer &&\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.originalFileName,\r\n        currentPlaylistArr:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.tracks,\r\n        index:\r\n            state.currentSongReducer &&\r\n            state.currentSongReducer.index,\r\n    }),\r\n    null\r\n)(Player)\r\n//\r\n// <button\r\n// // onClick={()=> store.dispatch(actionCreatorIndexOfCurrentTrack(props.allSongsArr[props.index-1].originalFileName, props.allSongsArr[props.index -1].url))}\r\n// /*onClick={ store.dispatch(actionCreatorIndexOfCurrentTrack(item.originalFileName, item.ur))}*/\r\n// >prev</button>","import React, {useEffect, useState} from \"react\"\r\nimport store from \"../../store/store\"\r\nimport actionCreatorLogout from \"../../actioncreators/actionCreatorsLogout\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Header = (props)=>{\r\n    let MyButton = connect(null,{onClick:actionCreatorLogout})(\"button\")\r\n\r\n    return(\r\n        <div className={\"header-div\"}>\r\n            <p>The best player</p>\r\n\r\n            {props.nameLoggedUser==\"Guest\" ? <p>{props.nameLoggedUser}</p> : <div><MyButton >Log out</MyButton><p>{props.nameLoggedUser}</p></div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect\r\n((state)=>({nameLoggedUser:(\"data\" in state.authReducer) &&\r\n    state.authReducer.data.sub.login||\"Guest\"}),null)\r\n(Header)\r\n\r\n\r\n","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport gql from \"../commonThings/gql\";\r\n\r\nfunction actionCreatorCurrentPlayList(playlistId=localStorage.lastPLaylist){\r\n\r\n    localStorage.lastPLaylist = playlistId\r\n    return actionCreatorPromise(\"сurrentPlayList\",gql(`\r\n            query allPlaylists{\r\n            PlaylistFindOne(query:\"[{\\\\\"_id\\\\\":\\\\\"${localStorage.lastPLaylist}\\\\\"}]\"){_id name tracks{_id originalFileName id3{title album artist year genre trackNumber}}}\r\n            }`))\r\n}\r\nexport default actionCreatorCurrentPlayList\r\n\r\n","import React, {useEffect, useState} from \"react\"\r\nimport store from \"../../store/store\"\r\nimport actionCreatorCurrentPlayList from \"../../actioncreators/actionCreatorCurrentPlaylist\";\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorAllSongs from \"../../actioncreators/actionCreatorAllSongs\";\r\nimport actionCreatorPromise from \"../../actioncreators/actionCreatorPromise\";\r\nimport gql from \"../../commonThings/gql\";\r\n\r\n\r\nconst PlaylistsOne=(props)=>{\r\nlet style={}\r\n    if (props.currentPlaylistId === props.id){\r\n        style = {\r\n            color:\"chartreuse\"\r\n        }\r\n    }\r\n    return(\r\n        <div className={\"playlist-one\"} style={style}\r\n        onClick={()=>store.dispatch(actionCreatorCurrentPlayList(props.id))}\r\n        >\r\n            {props.name + \" \"}\r\n\r\n        </div>\r\n)\r\n}\r\nexport default\r\nconnect(\r\n    state=>({\r\n        currentPlaylistId:\r\n            state.promiseReducer &&\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne._id\r\n\r\n    })\r\n)(PlaylistsOne)\r\n\r\n","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport gql from \"../commonThings/gql\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction     actionCreatorAllPlaylists(id){\r\n    return actionCreatorPromise(\"allPlaylists\",gql(`\r\n\r\n             query playlists{\r\n                PlaylistFind(query: \"[{\\\\\"___owner\\\\\": \\\\\"${id}\\\\\"}]\")\r\n                 {name _id description\r\n                    tracks{\r\n                        _id\r\n                    }}\r\n             } \r\n        `))\r\n\r\n  //  \"5f64e81cc3f4ef1328f498ce\"\r\n\r\n\r\n    // query allPlaylists{\r\n    //     PlaylistFind(query:\"[{}]\"){ name _id description }\r\n    // }\r\n\r\n    /* PlaylistFind(query:\"[{}]\"){ name _id description /!*tracks{url originalFileName id3{artist genre*!/} }}*/\r\n}\r\n\r\nexport default actionCreatorAllPlaylists","import gql from \"../commonThings/gql\";\r\nimport actionCreatorAllPlaylists from \"../actioncreators/actionCreatorAllPlaylists\";\r\nimport actionCreatorPromise from \"./actionCreatorPromise\";\r\n//import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport store from \"../store/store\";\r\n\r\nfunction actionCreatorAddNewPlaylist(name,id) {\r\n    return async dispatch=>{\r\n        debugger;\r\n        await dispatch(actionCreatorPromise(\"newTrackList\",gql(`\r\n\r\n        mutation addPlaylist{\r\n            PlaylistUpsert(playlist:\r\n            {name:\"${name}\"}){_id}\r\n        }\r\n        `)))\r\n        store.dispatch(actionCreatorAllPlaylists(id))\r\n    }\r\n\r\n}\r\n\r\nexport default actionCreatorAddNewPlaylist\r\n/*\r\nstore.dispatch(actionCreatorAllPlaylists(props.id))\r\n\r\nid:\r\n    state.authReducer &&\r\n    state.authReducer.data &&\r\n    state.authReducer.data.sub.id,*/\r\n","import React, {useEffect, useState} from \"react\"\r\nimport store from \"../../store/store\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorAllSongs from \"../../actioncreators/actionCreatorAllSongs\";\r\nimport actionCreatorAllPlaylistFind from \"../../actioncreators/actionCreatorAllPlayListFind\";\r\nimport PlaylistsOne from \"./playlistOne\";\r\nimport index from \"jwt-decode\";\r\nimport actionCreatorPromise from \"../../actioncreators/actionCreatorPromise\";\r\nimport actionCreatorAddNewPlaylist from \"../../actioncreators/actionCreatorAddNewPlaylist\";\r\n\r\n\r\n\r\n\r\n\r\nconst PlaylistsAll=(props)=>{\r\n    const [addButton,setAddButton] = useState(false)\r\n    const [inputValue,setInputValue] = useState(\"\")\r\n\r\n    return(\r\n        <div className={\"playlist-all\"}>\r\n\r\n            <button\r\n            onClick={()=>{setAddButton(!addButton)}}\r\n            >\r\n                add new playlist\r\n            </button>\r\n\r\n            {addButton &&   <div>\r\n                                <input\r\n                                    type={\"text\"}\r\n                                    placeholder={\"write name\"}\r\n                                    onChange={(e)=>setInputValue(e.target.value)}\r\n                                />\r\n                                <button\r\n                                    onClick={() => store.dispatch(actionCreatorAddNewPlaylist(inputValue, props.id))}\r\n                                >\r\n                                    create\r\n                                </button>\r\n                            </div>\r\n            }\r\n            <p>All Playlists:</p>\r\n            {props.allPlaylists.map((item,key)=><PlaylistsOne name={item.name} id={item._id} desсription={item.description} key={key}/>)}\r\n        </div>\r\n    )\r\n}\r\nexport default PlaylistsAll","\r\nimport React, {useEffect, useState} from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst Preloader = ()=>\r\n    <CircularProgress className={\"pre\"} color=\"white\" />\r\n   /* <img className={\"pre\"} src=\"https://motiongraphicsphoebe.files.wordpress.com/2018/10/943d662b-25c9-42d6-9fd2-cc36d2ffab76.gif\" />\r\n*/\r\n    export default Preloader","import React, {useEffect, useState} from \"react\"\r\nimport store from \"../../store/store\"\r\nimport PlaylistsAll from \"./playlistsAll\";\r\nimport actionCreatorTracklistFind from \"../../actioncreators/actionCreatorTracklistFind\";\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorAllSongs from \"../../actioncreators/actionCreatorAllSongs\";\r\nimport AllPlaylists from \"../../reducers/AllPLaylistsReducer\";\r\nimport actionCreatorAllPlaylistFind from \"../../actioncreators/actionCreatorAllPlayListFind\";\r\nimport getGQL from \"../../commonThings/getGQL\";\r\nimport actionCreatorPromise from \"../../actioncreators/actionCreatorPromise\";\r\nimport gql from \"../../commonThings/gql\";\r\nimport promiseReducer from \"../../reducers/promiceReducer\";\r\nimport Preloader from \"../../commonThings/preloader\";\r\nimport actionCreatorAllPlaylists from \"../../actioncreators/actionCreatorAllPlaylists\";\r\nimport actionCreatorCurrentPlayList from \"../../actioncreators/actionCreatorCurrentPlaylist\";\r\n\r\nconst Aside =(props)=>{\r\n\r\n    const [inputValue,setInputValue] = useState(\"\")\r\nuseEffect(()=>{\r\n    store.dispatch(actionCreatorAllPlaylists(props.id))\r\n    store.dispatch(actionCreatorCurrentPlayList())//загрузка последнего плейлиста\r\n},[])\r\n    return(\r\n        <div className={\"aside\"}>\r\n            Your playlists:\r\n           {/* <input\r\n                placeholder={\"find playlist\"}\r\n                onChange={(e)=>setInputValue(e.target.value)}\r\n            />*/}\r\n            {props.status===\"RESOLVED\" && props.allPlaylists ?\r\n                <PlaylistsAll allPlaylists={ props.allPlaylists/*.filter(playlist=>playlist.name.includes(inputValue))*/} id={props.id}/>:\r\n                <Preloader/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    state=>({\r\n        status: state.promiseReducer && state.promiseReducer.allPlaylists && state.promiseReducer.allPlaylists.status,\r\n        allPlaylists:\r\n            state.promiseReducer &&\r\n            state.promiseReducer.allPlaylists &&\r\n            state.promiseReducer.allPlaylists.payload &&\r\n            state.promiseReducer.allPlaylists.payload.data &&\r\n            state.promiseReducer.allPlaylists.payload.data.PlaylistFind,\r\n        id:\r\n            state.authReducer &&\r\n            state.authReducer.data &&\r\n            state.authReducer.data.sub.id,\r\n    })\r\n)(Aside)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//const gql = getGQL('/graphql'/*, {Authorization: \"Bearer \" + localStorage.authToken}*/)\r\n\r\n\r\n/*const Aside = (props)=>{\r\n    const [inputValue,setInputValue] = useState(\"\")\r\n    const [backData,setBackData] = useState([])\r\n    async function showMeTrackLists() {\r\n        let data = await getGQL(\r\n            `/graphql`,\r\n            {\"Authorization\": \"Bearer \" + localStorage.authToken}\r\n            )\r\n        (`\r\n            query allPlaylists{\r\n            PlaylistFind(query:\"[{}]\"){ name _id description tracks{url originalFileName id3{artist genre} }}\r\n            }\r\n        `)\r\n        if(data.data && data.data.PlaylistFind){\r\n            setBackData(data.data.PlaylistFind)\r\n            store.dispatch(actionCreatorAllPlaylistFind(data.data.PlaylistFind))\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        async function showMeTrackLists() {\r\n            let data = await getGQL(\r\n                `/graphql`,\r\n                {\"Authorization\": \"Bearer \" + localStorage.authToken}\r\n            )\r\n            (`\r\n            query allPlaylists{\r\n            PlaylistFind(query:\"[{}]\"){ name _id description tracks{url originalFileName id3{artist genre} }}\r\n            }\r\n        `)\r\n            if(data.data && data.data.PlaylistFind){\r\n                setBackData(data.data.PlaylistFind)\r\n                store.dispatch(actionCreatorAllPlaylistFind(data.data.PlaylistFind))\r\n            }\r\n        }\r\n        showMeTrackLists()\r\n    },[])\r\n    return(\r\n        <div className={\"aside\"}>\r\n            Aside\r\n\r\n            <input\r\n            onChange={(e)=>{\r\n                setInputValue(e.target.value)\r\n                store.dispatch(actionCreatorTracklistFind(e.target.value))\r\n            }}\r\n            placeholder={\"find tracklist\"}\r\n            />\r\n            <PlaylistsAll allPlaylists={props.filredTrackLists}/>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    (state)=>({\r\n       filredTrackLists: state.AllPlaylists.data ? state.AllPlaylists.data.AllPlaylists.filter(\r\n           tracklist=>tracklist.name.includes(state.tracklistFindReducer)\r\n        ) :[]\r\n    }),\r\n    null\r\n)(Aside)*/","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport gql from \"../commonThings/gql\";\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorCurrentPlayList from \"./actionCreatorCurrentPlaylist\";\r\nimport store from \"../store/store\";\r\n\r\nfunction actionCreatorAddTrackToCurrentPlaylist(idPlaylist,arrTracks,idTrack){\r\n\r\n    let arr = [...arrTracks,{[\"_id\"]:idTrack}]\r\n\r\n    return async dispatch => {\r\n        // debugger;\r\n        await dispatch(actionCreatorPromise(\"addTrack\",gql(`\r\n       \r\n    mutation addtrack($idPlaylist:ID,$arr:[TrackInput]){   \r\n         PlaylistUpsert(playlist:{_id: $idPlaylist,\r\n                tracks:$arr\r\n            }){_id}\r\n         }\r\n         \r\n         `,{idPlaylist:idPlaylist,arr:arr })))\r\n     await store.dispatch(actionCreatorCurrentPlayList(idPlaylist))\r\n    }\r\n}\r\nexport default actionCreatorAddTrackToCurrentPlaylist\r\n\r\n//      \"5f7c7ffc8c6ee212fcf7fbcc\"\r\n\r\n/*\r\n\r\nmutation addtrack{\r\n    PlaylistUpsert(playlist:{_id: \"${idPlaylist}\",\r\n        tracks:\"${arr}\"\r\n    }){_id}\r\n}*/","import {useDropzone} from \"react-dropzone\";\r\nimport React, {useRef,useCallback} from \"react\";\r\nimport actionCreatorPromise from \"../actioncreators/actionCreatorPromise\";\r\nimport {connect} from \"react-redux\";\r\nimport store from \"../store/store\";\r\nimport actionCreatorAddNewPlaylist from \"../actioncreators/actionCreatorAddNewPlaylist\";\r\nimport actionCreatorAddTrackToCurrentPlaylist from \"../actioncreators/actionCreatorAddTrackToCurrentPlaylist\";\r\n\r\n\r\nconst actionUpload =(formData,arrTracks,idPlaylist)=>actionCreatorPromise(\"upload\",\r\n    fetch('/track', {\r\n        method: \"POST\",\r\n        headers: localStorage.authToken ? {Authorization: 'Bearer ' + localStorage.authToken} : {},\r\n        body: formData\r\n    }).then(res=>res.json()).then((track)=>store.dispatch(actionCreatorAddTrackToCurrentPlaylist(idPlaylist,arrTracks,track._id)))  )\r\n\r\n//\r\n// .then((track)=>console.log(track))\r\nfunction DropZone(props) {\r\n    let arrTracks = []\r\n    props.arr && props.arr!=null && props.arr.map(item=>arrTracks.push({[\"_id\"]:item._id}))\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        /*debugger;*/\r\n        acceptedFiles.map(file=> {\r\n            let formData = new FormData()\r\n            formData.append(\"track\",file)\r\n            store.dispatch(actionUpload(formData,arrTracks,props.playlistId))\r\n        })\r\n\r\n    }, )\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    return (\r\n        <div className={\"main__description__dropzone\"} {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            +\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state)=>({\r\n        playlistId:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne._id,\r\n        arr:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.tracks,\r\n    }),null\r\n)\r\n(DropZone)\r\n\r\n\r\n/*\r\n\r\nfunction DropZone(props) {\r\n    let arrTracks = []\r\n    props.arr && props.arr!=null && props.arr.map(item=>arrTracks.push({[\"_id\"]:item._id}))\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        debugger;\r\n        acceptedFiles.map(file=> {\r\n            let formData = new FormData()\r\n            formData.append(\"track\",file)\r\n            store.dispatch(actionUpload(formData,arrTracks,props.playlistId))\r\n        })\r\n    }, )\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <div >add files</div>\r\n            {/!*  {\r\n                isDragActive ?\r\n                    <p>Drop the files here ...</p> :\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n            }*!/}\r\n        </div>\r\n    )\r\n}\r\n\r\n*/\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport DropZone from \"../DropZone\";\r\n\r\nconst DescriptionCurrentSong=(props)=>{\r\n/*debugger;*/\r\n    return(\r\n        <div className={\"main__description\"}>\r\n            <div className={\"main__description__description-song\"}>\r\n\r\n                <div className={\"main__description__description-song-name\"}>\r\n                    <div >{props.title ||\"Мелани\" }</div>\r\n                    <div>{props.artist || \"Ассаи\"}</div>\r\n                </div>\r\n                <div className={\"main__description__description-song-teg\"}>\r\n                    <div> album: {props.album    || \"Аврора опа\"}</div>\r\n                    <div>genre: {props.genre || \"Hip-Hop\"}</div>\r\n                </div>\r\n            </div>\r\n            <DropZone/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(\r\n    (state)=>({\r\n\r\n        album:\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3 &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3.album ,\r\n        artist:\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3 &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3.artist ,\r\n        genre:\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3 &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3.genre ,\r\n        title:\r\n            state.promiseReducer.сurrentTrack &&\r\n            state.promiseReducer.сurrentTrack.payload &&\r\n            state.promiseReducer.сurrentTrack.payload.data &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3 &&\r\n            state.promiseReducer.сurrentTrack.payload.data.TrackFindOne.id3.title ,\r\n    })\r\n    ,\r\n    null\r\n)(DescriptionCurrentSong)\r\n\r\n","import actionCreatorPromise from \"./actionCreatorPromise\";\r\nimport gql from \"../commonThings/gql\";\r\nimport actionCreatorCurrentPlayList from \"./actionCreatorCurrentPlaylist\";\r\nimport store from \"../store/store\";\r\n\r\nfunction actionCreatorDeleteTrack(playlistArr,currentIndex,idPlaylist) {\r\n    //gg.splice(props.index,1)\r\n\r\n    let arr = []\r\n    playlistArr.map(item=>arr.push({[\"_id\"]:item._id}))\r\n    arr.splice(currentIndex,1)\r\n\r\n    return async dispatch => {\r\n        await dispatch(actionCreatorPromise(\"delTrack\",gql(`\r\n       \r\n    mutation deltrack($idPlaylist:ID,$arr:[TrackInput]){   \r\n         PlaylistUpsert(playlist:{_id: $idPlaylist,\r\n                tracks:$arr\r\n            }){_id}\r\n         }\r\n         \r\n         `,{idPlaylist:idPlaylist,arr:arr })))\r\n        await store.dispatch(actionCreatorCurrentPlayList(idPlaylist))\r\n    }\r\n}\r\n\r\nexport default actionCreatorDeleteTrack","import React, {useEffect, useRef} from \"react\";\r\nimport actionCreatorPromise from \"../../actioncreators/actionCreatorPromise\";\r\nimport gql from \"../../commonThings/gql\";\r\nimport actionCreatorCurrentTrack from \"../../actioncreators/actionCreatorCurrentTrack\";\r\nimport store from \"../../store/store\";\r\nimport {connect} from \"react-redux\";\r\nimport actionCreatorDeleteTrack from \"../../actioncreators/actionCreatorDeleteTrack\";\r\n\r\n\r\n\r\nconst OneTrack = (props)=>{\r\n\r\n    let style = {}\r\n    if (props.index===props.currentIndex % props.currentPlayListLength){\r\n        style = {\r\n            color:\"chartreuse\"\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.index===props.currentIndex % props.currentPlayListLength){\r\n            ref.current.scrollIntoView()\r\n        }\r\n    }, )\r\n    const ref = useRef()\r\n    return(\r\n        <div className={\"main__track-current\"} ref={ref} style={style}>\r\n            <div onClick={()=>{\r\n                store.dispatch(actionCreatorCurrentTrack(props.track._id,props.index))\r\n            }}>\r\n                {props.track && props.track.originalFileName}\r\n            </div>\r\n            <div\r\n                onClick={()=>\r\n                store.dispatch(actionCreatorDeleteTrack(\r\n                    props.currentPlayListTracksArr,\r\n                    props.index,\r\n                    props.currentPlayListId\r\n                    ))\r\n                }\r\n            >x</div>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    (state)=>({\r\n        currentIndex:state.currentSongReducer.index,\r\n        currentPlayListLength:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.tracks.length,\r\n        currentPlayListId:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne._id,\r\n        currentPlayListTracksArr:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.tracks,\r\n\r\n        })\r\n    ,\r\n    null\r\n)(OneTrack)","import React, {useEffect, useState} from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport CurrentTrack from \"./OneTrack\";\r\nimport Preloader from \"../../commonThings/preloader\";\r\nimport OneTrack from \"./OneTrack\";\r\n\r\nconst CurrentTrackList=(props)=>{\r\n/*debugger;*/\r\n    return(\r\n        <div className={\"main__tracklist-current\"}>\r\n             <div className={\"main__tracklist-current-name\"}> { props.playlistName?\r\n                 \"Playlist: \" + props.playlistName :\r\n                 \"Playlist: \"\r\n             }\r\n                 { props.status===\"PENDING\"? <Preloader/>:\"\"}\r\n             </div>\r\n            { props.status===undefined ? \"Choose a Playlist\":\"\"}\r\n            { props.status===\"RESOLVED\" && props.tracks!=null?\r\n                props.tracks.map((track,index) =>\r\n                <OneTrack track={track} index={index} key={index}/>):\"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n    (state)=>({\r\n        playlistName:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.name,\r\n        status:\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.status,\r\n        tracks:\r\n            state.promiseReducer &&\r\n            state.promiseReducer.сurrentPlayList &&\r\n            state.promiseReducer.сurrentPlayList.payload &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne &&\r\n            state.promiseReducer.сurrentPlayList.payload.data.PlaylistFindOne.tracks\r\n    }),\r\n    null\r\n)(CurrentTrackList)\r\n","import React, {useEffect, useState} from \"react\"\r\nimport Header from \"./Header\";\r\nimport DescriptionCurrentSong from \"./descriptionCurrentSong\";\r\nimport CurrentTrackList from \"./CurrentTrackList\";\r\n\r\n\r\nconst Main =()=>{\r\n\r\n    return(\r\n        <div className={\"main\"}>\r\n\r\n            <Header/>\r\n\r\n            <DescriptionCurrentSong/>\r\n            <CurrentTrackList/>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Main","import React, {useState,useRef} from 'react';\nimport './App.css';\nimport RegistrationForm from \"./components/registrationForm\";\n/*import {Router, Route, Link,Switch,Redirect,withRouter} from 'react-router-dom';*/\n/*import Counter from \"./components/Redax\";*/\nimport TrackList from \"./components/TrackList\";\nimport Player from \"./components/Footer/Player\";\nimport {Router, Route, Link,Switch} from 'react-router-dom';\nimport {Provider, connect}   from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\n/*import reducer from \"./reducers\"*/\n/*import authReducer from \"reducers/authReducer\"*/\nimport createHistory from \"history/createBrowserHistory\";\nimport store from \"./store/store\";\nimport Header from \"./components/Main/Header\";\nimport Aside from \"./components/Aside/Aside\";\nimport Main from \"./components/Main/Main\";\nimport history from \"./commonThings/history\";\nimport actionCreatorPromise from \"./actioncreators/actionCreatorPromise\";\nimport DropTest from \"./components/DropZone\";\nimport DropZone from \"./components/DropZone\";\n\n/*\nconst UploadTrack = ({onUpload})=>{\n    const formRef = useRef()\n    return(\n        <form action=\"/upload\" method=\"post\" encType=\"multipart/form-data\" ref={formRef}>\n            <input type=\"file\" name=\"photo\" id='photo' onChange={()=>onUpload(formRef.current)}/>\n        </form>\n    )\n}\nconst actionUpload =(form)=>actionCreatorPromise(\"upload\",\n    fetch('/upload', {\n    method: \"POST\",\n    headers: localStorage.authToken ? {Authorization: 'Bearer ' + localStorage.authToken} : {},\n    body: new FormData(form)\n}) /!*.then(res=>res.json()))*!/  )\n\nconst ConnectedUploader = connect((store)=>({data: store.promiseReducer.upload}),{onUpload:actionUpload})(UploadTrack)\n*/\n\n\n\n\n\nconst Main2=()=>{\n    return(\n        <div className={\"wrapper\"}>\n            <div className={\"main-wrapper\"}>\n                <Aside/>\n                <Main/>\n            </div>\n            <footer>\n                <Player/>\n            </footer>\n        </div>\n    )\n}\n\n\n\n\n\n\n   \n\n\n\n\n\nconst App=()=> {\n  return (\n      <div>\n          <Provider store={store}>\n              <Router history = {history}>\n                  <Switch>\n                      <Route  path = \"/registration\" component={RegistrationForm} />\n                      <Route exact path = \"/\" component={Main2} />\n                  </Switch>\n              </Router>\n          </Provider>\n      </div>\n    )\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}